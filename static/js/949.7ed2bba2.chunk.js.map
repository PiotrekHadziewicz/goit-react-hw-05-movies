{"version":3,"file":"static/js/949.7ed2bba2.chunk.js","mappings":"qLAEaA,E,MAAiBC,GAAAA,OAAa,CACzCC,QAAS,mC,2ICHEC,EAAmB,SAACC,EAAKC,GACpC,IACE,IAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,GAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,W,UCJ7C,EAAiC,mCAAjC,EAAwF,sCAAxF,EAAgJ,oC,SCqFhJ,EA/EmB,WACjB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAcO,GAAd,WAOMC,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAMC,iBACNJ,GAAa,GAFM,kBAKMpB,EAAAA,EAAAA,IAAA,qFACyDe,EADzD,gCALN,OAKXU,EALW,OAQjBP,EAAiBO,EAASC,KAAKC,SAC/BxB,EAAiB,gBAAiBsB,EAASC,KAAKC,SAT/B,kDAWjBN,EAAS,EAAD,IAXS,yBAajBD,GAAa,GAbI,6EAAH,sDA6BlB,OARAQ,EAAAA,EAAAA,YAAU,WACR,IAAMC,EFhCsB,SAACzB,GAC/B,IACE,IAAME,EAAkBG,aAAaqB,QAAQ1B,GAC7C,OAA2B,OAApBE,OAA2ByB,EAAYxB,KAAKyB,MAAM1B,GACzD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,UE2BpBoB,CAAiB,iBAClCJ,GACFX,EAAiBW,KAGlB,KAGD,iCACE,mBAAQK,UAAW,GAAnB,UACE,kBAAMA,UAAW,GAAIC,SAAUb,EAA/B,WACE,mBAAQc,KAAK,SAASF,UAAWG,EAAjC,UACE,iBAAMH,UAAW,GAAjB,uBAGF,kBACE7B,MAAOU,EACPuB,SA5CW,SAAAf,GACnBA,EAAMC,iBACNR,EAAgBO,EAAMgB,OAAOlC,QA2CrB6B,UAAWG,EACXD,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,uBAIjBzB,EAAc0B,OAAS,IACtB,wBACG1B,EAAc2B,KAAI,SAAAC,GAAY,OAC7B,eAAIX,UAAWG,EAAf,UACE,SAAC,KAAD,CACES,GAAE,kBAAaD,EAAaE,IAC5Bb,UAAWG,EAFb,SAIGQ,EAAaG,kBAL0BH,EAAaE,SAW9D5B,IAAa,SAAC8B,EAAA,EAAD,CAAQC,MAAM","sources":["api/client.js","api/localStorage.js","webpack://react-homework-template/./src/styles/MoviesPage.module.css?6227","components/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const finderInstance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n","export const saveLocalStorage = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nexport const loadLocalStorage = (key) => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"MoviesPage_btn\":\"MoviesPage_MoviesPage_btn__vpZs1\",\"MoviesPage_search\":\"MoviesPage_MoviesPage_search__eME0O\",\"MoviesPage_list\":\"MoviesPage_MoviesPage_list__Z5qsz\"};","import { useState, useEffect } from 'react';\nimport { finderInstance } from 'api/client';\nimport { Link } from 'react-router-dom';\nimport { saveLocalStorage, loadLocalStorage } from 'api/localStorage';\nimport { Loader } from 'components/Loader';\nimport styles from '../styles/MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [lookingValue, setLookingValue] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  // eslint-disable-next-line\n  const [error, setError] = useState(null);\n\n  const handleChange = event => {\n    event.preventDefault();\n    setLookingValue(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const response = await finderInstance.get(\n        `search/movie?api_key=b44664f7e0740398ed834dca0818b840&language=en-US&query=${lookingValue}&page=1&include_adult=false`\n      );\n      setSearchResults(response.data.results);\n      saveLocalStorage('searchResults', response.data.results);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // useEffect(() => {\n  //   saveInLocalStorage('searchResults', searchResults);\n  // }, [searchResults]);\n\n  useEffect(() => {\n    const storageArray = loadLocalStorage('searchResults');\n    if (storageArray) {\n      setSearchResults(storageArray);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <header className={''}>\n        <form className={''} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={styles.MoviesPage_btn}>\n            <span className={''}>Search</span>\n          </button>\n\n          <input\n            value={lookingValue}\n            onChange={handleChange}\n            className={styles.MoviesPage_search}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          />\n        </form>\n      </header>\n      {searchResults.length > 0 && (\n        <ul>\n          {searchResults.map(searchResult => (\n            <li className={styles.MoviesPage_list} key={searchResult.id}>\n              <Link\n                to={`/movies/${searchResult.id}`}\n                className={styles.MoviesPage_list}\n              >\n                {searchResult.original_title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      {isLoading && <Loader color=\"#3f51b5\" />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["finderInstance","axios","baseURL","saveLocalStorage","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","useState","lookingValue","setLookingValue","searchResults","setSearchResults","isLoading","setIsLoading","setError","handleSubmit","event","preventDefault","response","data","results","useEffect","storageArray","getItem","undefined","parse","loadLocalStorage","className","onSubmit","type","styles","onChange","target","autoComplete","autoFocus","placeholder","length","map","searchResult","to","id","original_title","Loader","color"],"sourceRoot":""}